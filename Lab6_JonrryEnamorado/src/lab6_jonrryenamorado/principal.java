/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package lab6_jonrryenamorado;

import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

/**
 *
 * @author wende
 */
public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    String admin = "admin";
    String pass = "123";

    public principal() {
        initComponents();
        tf_user.setText(admin);
        pf_pass.setText(pass);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        app = new javax.swing.JDialog();
        jScrollPane4 = new javax.swing.JScrollPane();
        tree1 = new javax.swing.JTree();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        series1 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        peliculas1 = new javax.swing.JList<>();
        bt_admin = new javax.swing.JButton();
        bt_cuenta = new javax.swing.JButton();
        prefm = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        prefs = new javax.swing.JButton();
        register = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        user = new javax.swing.JTextField();
        correo = new javax.swing.JTextField();
        fecha = new javax.swing.JTextField();
        tarjeta = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        pass2 = new javax.swing.JPasswordField();
        jd_admin = new javax.swing.JDialog();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        a_id = new javax.swing.JTextField();
        anm = new javax.swing.JTextField();
        act = new javax.swing.JTextField();
        aid = new javax.swing.JTextField();
        asub = new javax.swing.JTextField();
        acom = new javax.swing.JTextField();
        aact = new javax.swing.JTextField();
        aprod = new javax.swing.JTextField();
        adir = new javax.swing.JTextField();
        adur = new javax.swing.JTextField();
        arat = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        ntemp = new javax.swing.JTextField();
        pos = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        modserie = new javax.swing.JDialog();
        editdatos = new javax.swing.JComboBox<>();
        newdat1 = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        modpeli = new javax.swing.JDialog();
        editdato = new javax.swing.JComboBox<>();
        newdat = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        tf_user = new javax.swing.JTextField();
        pf_pass = new javax.swing.JPasswordField();
        jButton4 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        app.setDefaultCloseOperation(HIDE_ON_CLOSE

        );

        javax.swing.tree.DefaultMutableTreeNode treeNode1 = new javax.swing.tree.DefaultMutableTreeNode("Preferidas");
        javax.swing.tree.DefaultMutableTreeNode treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Peliculas");
        treeNode1.add(treeNode2);
        treeNode2 = new javax.swing.tree.DefaultMutableTreeNode("Series");
        treeNode1.add(treeNode2);
        tree1.setModel(new javax.swing.tree.DefaultTreeModel(treeNode1));
        jScrollPane4.setViewportView(tree1);

        jLabel5.setText("UniFlix");

        series1.setModel(new DefaultListModel());
        jScrollPane5.setViewportView(series1);

        peliculas1.setModel(new DefaultListModel());
        jScrollPane6.setViewportView(peliculas1);

        bt_admin.setText("Agregar Movie");
        bt_admin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_adminMouseClicked(evt);
            }
        });

        bt_cuenta.setText("Cuenta");

        prefm.setText("Agregar a Pref");
        prefm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prefmMouseClicked(evt);
            }
        });

        jButton5.setText("Modificar");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });

        jButton6.setText("Eliminar");
        jButton6.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton6MouseClicked(evt);
            }
        });

        jButton8.setText("Modificar");
        jButton8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton8MouseClicked(evt);
            }
        });

        jButton9.setText("Eliminar");
        jButton9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton9MouseClicked(evt);
            }
        });

        prefs.setText("Agregar a Pref");
        prefs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prefsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout appLayout = new javax.swing.GroupLayout(app.getContentPane());
        app.getContentPane().setLayout(appLayout);
        appLayout.setHorizontalGroup(
            appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appLayout.createSequentialGroup()
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(appLayout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(appLayout.createSequentialGroup()
                        .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(appLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(appLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton8))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(appLayout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                    .addGroup(appLayout.createSequentialGroup()
                        .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(bt_cuenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bt_admin, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
            .addGroup(appLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(prefs, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addComponent(prefm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        appLayout.setVerticalGroup(
            appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(appLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_admin))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bt_cuenta)
                .addGap(18, 18, 18)
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(prefm)
                    .addComponent(prefs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jScrollPane6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton5)
                    .addComponent(jButton8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(appLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6)
                    .addComponent(jButton9)))
        );

        jLabel1.setText("Registrar");

        jLabel2.setText("User:");

        jLabel3.setText("Password:");

        jLabel4.setText("Correo:");

        jLabel9.setText("Fecha de Nacimiento:");

        jLabel10.setText("Tarjeta:");

        jButton1.setText("Crear Usuario");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout registerLayout = new javax.swing.GroupLayout(register.getContentPane());
        register.getContentPane().setLayout(registerLayout);
        registerLayout.setHorizontalGroup(
            registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerLayout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(registerLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(fecha, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE)
                                .addComponent(tarjeta))))
                    .addGroup(registerLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(user)
                            .addComponent(correo)
                            .addComponent(pass2, javax.swing.GroupLayout.DEFAULT_SIZE, 142, Short.MAX_VALUE))))
                .addContainerGap(144, Short.MAX_VALUE))
        );
        registerLayout.setVerticalGroup(
            registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(registerLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addGap(39, 39, 39)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(pass2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(correo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(fecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(registerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(tarjeta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(30, 30, 30))
        );

        jLabel11.setText("Id");

        jLabel12.setText("Nombre:");

        jLabel13.setText("Categoria");

        jLabel14.setText("Idiomas");

        jLabel15.setText("Subtitulos");

        jLabel16.setText("Comments");

        jLabel17.setText("Actores");

        jLabel18.setText("Prod.");

        jLabel19.setText("Director");

        jLabel20.setText("Duracion");

        jLabel21.setText("Rating");

        anm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anmActionPerformed(evt);
            }
        });

        arat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));

        jButton2.setText("Agregar");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jLabel22.setText("N. Temp:");

        ntemp.setEnabled(false);

        pos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pelicula", "Serie", " " }));
        pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                posActionPerformed(evt);
            }
        });

        jLabel23.setText("Separar con comas(\",\")");

        jLabel24.setText("Separar con comas(\",\")");

        jLabel25.setText("Separar con comas(\",\")");

        jLabel26.setText("Separar con comas(\",\")");

        javax.swing.GroupLayout jd_adminLayout = new javax.swing.GroupLayout(jd_admin.getContentPane());
        jd_admin.getContentPane().setLayout(jd_adminLayout);
        jd_adminLayout.setHorizontalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel17)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(jLabel22))
                        .addGap(18, 18, 18)
                        .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adur)
                            .addComponent(adir)
                            .addComponent(aprod)
                            .addComponent(aact)
                            .addComponent(acom)
                            .addComponent(asub)
                            .addComponent(aid)
                            .addComponent(act)
                            .addComponent(anm)
                            .addComponent(a_id)
                            .addGroup(jd_adminLayout.createSequentialGroup()
                                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(arat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ntemp, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addGap(174, 174, 174)
                        .addComponent(jButton2)
                        .addGap(0, 163, Short.MAX_VALUE)))
                .addGap(31, 31, 31)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel23)
                    .addComponent(jLabel24)
                    .addComponent(jLabel26)
                    .addComponent(jLabel25))
                .addGap(23, 23, 23))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jd_adminLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(179, 179, 179))
        );
        jd_adminLayout.setVerticalGroup(
            jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jd_adminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(a_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(anm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(act, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jd_adminLayout.createSequentialGroup()
                        .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(aid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(asub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel24))
                        .addGap(18, 18, 18)
                        .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel16)
                            .addComponent(acom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23)))
                    .addComponent(jLabel26))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(aact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(aprod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(adir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(adur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(arat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jd_adminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(ntemp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addContainerGap())
        );

        editdatos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID:", "Nombre:", "Categoria:", "Idiomas:", "Subtitulos:", "Comentarios:", "Actores:", "Productora:", "Director:", "Duracion:", "Rating:", "Temporadas:" }));

        jLabel27.setText("Dato a Editar:");

        jLabel28.setText("Nuevo Dato:");

        jButton7.setText("Set");
        jButton7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton7MouseClicked(evt);
            }
        });
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout modserieLayout = new javax.swing.GroupLayout(modserie.getContentPane());
        modserie.getContentPane().setLayout(modserieLayout);
        modserieLayout.setHorizontalGroup(
            modserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modserieLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(modserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editdatos, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel27))
                .addGap(18, 18, 18)
                .addGroup(modserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modserieLayout.createSequentialGroup()
                        .addComponent(newdat1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(85, Short.MAX_VALUE))
                    .addGroup(modserieLayout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(modserieLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        modserieLayout.setVerticalGroup(
            modserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modserieLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(modserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modserieLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editdatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newdat1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        editdato.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID:", "Nombre:", "Categoria:", "Idiomas:", "Subtitulos:", "Comentarios:", "Actores:", "Productora:", "Director:", "Duracion:", "Rating:" }));

        newdat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newdatActionPerformed(evt);
            }
        });

        jLabel29.setText("Dato a Editar:");

        jLabel30.setText("Nuevo Dato:");

        jButton10.setText("Set");
        jButton10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton10MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout modpeliLayout = new javax.swing.GroupLayout(modpeli.getContentPane());
        modpeli.getContentPane().setLayout(modpeliLayout);
        modpeliLayout.setHorizontalGroup(
            modpeliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modpeliLayout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addGroup(modpeliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(editdato, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel29))
                .addGap(18, 18, 18)
                .addGroup(modpeliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(modpeliLayout.createSequentialGroup()
                        .addComponent(newdat, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(63, Short.MAX_VALUE))
                    .addGroup(modpeliLayout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(modpeliLayout.createSequentialGroup()
                .addGap(217, 217, 217)
                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        modpeliLayout.setVerticalGroup(
            modpeliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(modpeliLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(modpeliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel30))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(modpeliLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editdato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newdat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton10)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel6.setText("Password:");

        jButton3.setText("Login");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jButton4.setText("Register");
        jButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton4MouseClicked(evt);
            }
        });

        jLabel7.setText("LOGIN");

        jLabel8.setText("User:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(69, 69, 69)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(18, 18, 18)
                                    .addComponent(pf_pass))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(17, 17, 17)
                                    .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addComponent(jButton3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(158, 158, 158)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tf_user, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(pf_pass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap(72, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    int list = 0;
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        administrarseries ap = new administrarseries("./series.txt");
        administrarpeliculas apm = new administrarpeliculas("./peliculas.txt");
        administrarusuario user = new administrarusuario("./usuarios.txt");
        boolean ver = false;
        try {
            ap.cargarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            apm.cargarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            user.cargarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        if (tf_user.getText().equals(admin) && pf_pass.getText().equals(pass)) {
            series1.setEnabled(true);
            peliculas1.setEnabled(true);
            tree1.setEnabled(false);
            jButton6.setEnabled(true);
            jButton5.setEnabled(true);
            jButton8.setEnabled(true);
            jButton9.setEnabled(true);
            bt_admin.setEnabled(true);
            prefs.setEnabled(false);
            prefm.setEnabled(false);
            bt_cuenta.setEnabled(false);
            DefaultListModel modelo = (DefaultListModel) series1.getModel();
            DefaultListModel modelo2 = (DefaultListModel) peliculas1.getModel();
            
            if(list <1){
            for (int i = 0; i < ap.listaSerie.size(); i++) {
                modelo.addElement(new serie(ap.listaSerie.get(i).getId(), ap.listaSerie.get(i).getNombre(), ap.listaSerie.get(i).getCategoria(),
                        ap.listaSerie.get(i).getIdiomas(), ap.listaSerie.get(i).getSubtitulos(), ap.listaSerie.get(i).getComentarios(), ap.listaSerie.get(i).getActores(), ap.listaSerie.get(i).getProductora(),
                        ap.listaSerie.get(i).getDirector(), ap.listaSerie.get(i).getDuracion(), ap.listaSerie.get(i).getRating(), ap.listaSerie.get(i).getTemp()));
            }

            for (int i = 0; i < apm.listaPelicula.size(); i++) {
                modelo2.addElement(new pelicula(apm.listaPelicula.get(i).getId(), apm.listaPelicula.get(i).getNombre(), apm.listaPelicula.get(i).getCategoria(),
                        apm.listaPelicula.get(i).getIdiomas(), apm.listaPelicula.get(i).getSubtitulos(), apm.listaPelicula.get(i).getComentarios(), apm.listaPelicula.get(i).getActores(), apm.listaPelicula.get(i).getProductora(),
                        apm.listaPelicula.get(i).getDirector(), apm.listaPelicula.get(i).getDuracion(), apm.listaPelicula.get(i).getRating()));
            }
            series1.setModel(modelo);
            peliculas1.setModel(modelo2);
            list++;
            }
            app.setModal(true);
            app.pack();
            app.setLocationRelativeTo(this);
            app.setVisible(true);

        } else {
            for (usuario t : user.getListausuario()) {
                if (t.getUser().equals(tf_user.getText()) && t.getContra().equals(pf_pass.getText())) {
                    ver = true;
                }
            }
            if (ver) {
                if(list<1){
                DefaultListModel modelo = (DefaultListModel) series1.getModel();
                DefaultListModel modelo2 = (DefaultListModel) peliculas1.getModel();
                bt_admin.setEnabled(false);
                prefm.setEnabled(true);

                bt_cuenta.setEnabled(true);
                for (int i = 0; i < ap.listaSerie.size(); i++) {
                    modelo.addElement(new serie(ap.listaSerie.get(i).getId(), ap.listaSerie.get(i).getNombre(), ap.listaSerie.get(i).getCategoria(),
                            ap.listaSerie.get(i).getIdiomas(), ap.listaSerie.get(i).getSubtitulos(), ap.listaSerie.get(i).getComentarios(), ap.listaSerie.get(i).getActores(), ap.listaSerie.get(i).getProductora(),
                            ap.listaSerie.get(i).getDirector(), ap.listaSerie.get(i).getDuracion(), ap.listaSerie.get(i).getRating(), ap.listaSerie.get(i).getTemp()));
                }

                for (int i = 0; i < apm.listaPelicula.size(); i++) {
                    modelo2.addElement(new pelicula(apm.listaPelicula.get(i).getId(), apm.listaPelicula.get(i).getNombre(), apm.listaPelicula.get(i).getCategoria(),
                            apm.listaPelicula.get(i).getIdiomas(), apm.listaPelicula.get(i).getSubtitulos(), apm.listaPelicula.get(i).getComentarios(), apm.listaPelicula.get(i).getActores(), apm.listaPelicula.get(i).getProductora(),
                            apm.listaPelicula.get(i).getDirector(), apm.listaPelicula.get(i).getDuracion(), apm.listaPelicula.get(i).getRating()));
                }
                series1.setModel(modelo);
                peliculas1.setModel(modelo2);
                list++;
                }
                jButton6.setEnabled(false);
                jButton5.setEnabled(false);
                jButton8.setEnabled(false);
                jButton9.setEnabled(false);
                series1.setEnabled(true);
                peliculas1.setEnabled(true);
                tree1.setEnabled(true);
                app.setModal(true);
                app.pack();
                app.setLocationRelativeTo(this);
                app.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(this, "Usuario o contraseña incorrecta");
            }
        }

    }//GEN-LAST:event_jButton3MouseClicked

    private void jButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton4MouseClicked
        // TODO add your handling code here:
        register.setModal(true);
        register.pack();
        register.setLocationRelativeTo(this);
        register.setVisible(true);
    }//GEN-LAST:event_jButton4MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        administrarusuario adu = new administrarusuario("./usuarios.txt");
        ArrayList<serie> k = new ArrayList();
        ArrayList<pelicula> l = new ArrayList();
        k.add(new serie("n/a"));
        l.add(new pelicula("n/a"));
        usuario m = new usuario(user.getText(), pass2.getText(), correo.getText(), fecha.getText(), k, l, tarjeta.getText());
        try {
            adu.cargarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        boolean ver = true;
        for (usuario t : adu.getListausuario()) {
            if (t.getUser().equals(m.getUser()) || t.getCorreo().equals(m.getCorreo()) || t.getUser().equals("admin")) {
                ver = false;
            }
        }
        if (ver) {
            adu.setUsuario(m);
            try {
                adu.escribirArchivo();
                JOptionPane.showMessageDialog(register, "Usuario creado exitosamente!");
            } catch (IOException ex) {
                Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            JOptionPane.showMessageDialog(register, "ERROR USUARIO O CORREO YA EXISTENTE");
        }

    }//GEN-LAST:event_jButton1MouseClicked

    private void anmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_anmActionPerformed

    private void posActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_posActionPerformed
        // TODO add your handling code here:

        if (pos.getSelectedItem().toString().equals("Serie")) {
            ntemp.setEnabled(true);
        } else {
            ntemp.setEnabled(false);
        }
    }//GEN-LAST:event_posActionPerformed

    private void bt_adminMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_adminMouseClicked
        // TODO add your handling code here:
        jd_admin.setModal(true);
        jd_admin.pack();
        jd_admin.setLocationRelativeTo(this);
        jd_admin.setVisible(true);
    }//GEN-LAST:event_bt_adminMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        administrarseries ds = new administrarseries("./series.txt");
        administrarpeliculas dp = new administrarpeliculas("./peliculas.txt");
        if (pos.getSelectedItem().toString().equals("Serie")) {
            try {
                ds.cargarArchivo();
            } catch (IOException ex) {
                Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            for (serie t : ds.getListaSerie()) {
                if (t.getId() == (a_id.getText())) {
                    a_id.setText(JOptionPane.showInputDialog("ID YA EXISTE INGRESE OTRO"));
                }
            }
            try {
                ArrayList<idioma> idiomas = new ArrayList();
                ArrayList<sub> subs = new ArrayList();
                ArrayList<comments> coments = new ArrayList();
                ArrayList<actores> actores = new ArrayList();
                String s_idiomas = aid.getText();
                String s_subs = asub.getText();
                String s_coments = acom.getText();
                String s_act = aact.getText();

                Scanner id = new Scanner(s_idiomas);
                id.useDelimiter(",");
                while (id.hasNext()) {
                    idiomas.add(new idioma(id.next()));
                }
                id = new Scanner(s_subs);
                id.useDelimiter(",");
                while (id.hasNext()) {
                    subs.add(new sub(id.next()));
                }
                id = new Scanner(s_coments);
                id.useDelimiter(",");
                while (id.hasNext()) {
                    coments.add(new comments(id.next()));
                }
                id = new Scanner(s_act);
                id.useDelimiter(",");
                while (id.hasNext()) {
                    actores.add(new actores(id.next()));
                }
                serie p = new serie(a_id.getText(), anm.getText(), act.getText(), idiomas, subs, coments, actores, aprod.getText(), adir.getText(),
                        adur.getText(), Integer.parseInt(arat.getSelectedItem().toString()), Integer.parseInt(ntemp.getText()));

                ds.setSerie(p);
                ds.escribirArchivo();
                JOptionPane.showMessageDialog(jd_admin, "Serie agregada con exito");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(jd_admin, "ERROR NO SE PUDO AGREGAR VERIFIQUE LOS DATOS");
            }

        } else {
            try {
                dp.cargarArchivo();
            } catch (IOException ex) {
                Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
            }
            for (pelicula t : dp.getListaPelicula()) {

                if (t.getId().equals(a_id.getText())) {
                    a_id.setText(JOptionPane.showInputDialog("ID YA EXISTE INGRESE OTRO"));
                }
            }

            try {
                ArrayList<idioma> idiomas = new ArrayList();
                ArrayList<sub> subs = new ArrayList();
                ArrayList<comments> coments = new ArrayList();
                ArrayList<actores> actores = new ArrayList();
                pelicula e = new pelicula(a_id.getText(), anm.getText(), act.getText(), idiomas, subs, coments, actores, aprod.getText(), adir.getText(),
                        adur.getText(), Integer.parseInt(arat.getSelectedItem().toString()));
                dp.setPelicula(e);
                dp.escribirArchivo();
                JOptionPane.showMessageDialog(jd_admin, "Pelicula agregada con exito");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(jd_admin, "ERROR NO SE PUDO AGREGAR VERIFIQUE LOS DATOS");
            }
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
        // TODO add your handling code here:
        if (peliculas1.getSelectedIndex() >= 0) {
            DefaultListModel m = (DefaultListModel) peliculas1.getModel();
            pelis = (pelicula) m.get(peliculas1.getSelectedIndex());
            modpeli.setModal(true);
            modpeli.pack();
            modpeli.setLocationRelativeTo(this);
            modpeli.setVisible(true);
        }
    }//GEN-LAST:event_jButton5MouseClicked

    private void jButton6MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton6MouseClicked
        // TODO add your handling code here:
        if (peliculas1.getSelectedIndex() >= 0) {
            int jp = JOptionPane.showConfirmDialog(app, "Seguro que desea eliminar?");
            if (jp == JOptionPane.YES_OPTION) {
                DefaultListModel m = (DefaultListModel) peliculas1.getModel();
                pelis = (pelicula) m.get(peliculas1.getSelectedIndex());
                administrarpeliculas ap = new administrarpeliculas("./peliculas.txt");
                try {
                    ap.cargarArchivo();
                } catch (IOException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (peliculas1.getSelectedIndex() == (m.getSize()) - 1) {
                    ap.getListaPelicula().remove(ap.listaPelicula.size() - 1);
                }
                for (pelicula t : ap.listaPelicula) {
                    if (t.getNombre().equals(pelis.getNombre())) {
                        ap.getListaPelicula().remove(t);
                    }
                }
                try {
                    ap.escribirArchivo();
                } catch (IOException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                m.remove(peliculas1.getSelectedIndex());
                peliculas1.setModel(m);
            }
        }
    }//GEN-LAST:event_jButton6MouseClicked

    private void jButton8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton8MouseClicked
        // TODO add your handling code here:
        if (series1.getSelectedIndex() >= 0) {
            DefaultListModel m = (DefaultListModel) series1.getModel();
            series = (serie) m.get(series1.getSelectedIndex());
            modserie.setModal(true);
            modserie.pack();
            modserie.setLocationRelativeTo(this);
            modserie.setVisible(true);
        }
    }//GEN-LAST:event_jButton8MouseClicked

    private void jButton9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton9MouseClicked
        // TODO add your handling code here:
        if (series1.getSelectedIndex() >= 0) {
            int jp = JOptionPane.showConfirmDialog(app, "Seguro que desea eliminar?");
            if (jp == JOptionPane.YES_OPTION) {
                DefaultListModel m = (DefaultListModel) series1.getModel();
                series = (serie) m.get(series1.getSelectedIndex());
                administrarseries ap = new administrarseries("./series.txt");
                try {
                    ap.cargarArchivo();
                } catch (IOException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                if (series1.getSelectedIndex() == (m.getSize()) - 1) {
                    ap.getListaSerie().remove(ap.listaSerie.size() - 1);
                }
                for (serie t : ap.listaSerie) {
                    if (t.getNombre().equals(series.getNombre())) {
                        ap.getListaSerie().remove(t);
                    }
                }
                try {
                    ap.escribirArchivo();
                } catch (IOException ex) {
                    Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
                }
                m.remove(series1.getSelectedIndex());
                series1.setModel(m);
            }
        }
    }//GEN-LAST:event_jButton9MouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void newdatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newdatActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newdatActionPerformed

    private void jButton10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton10MouseClicked
        // TODO add your handling code here:
        administrarpeliculas ap = new administrarpeliculas("./peliculas.txt");
        try {
            ap.cargarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        switch (editdato.getSelectedIndex()) {
            case 0:
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        int pos = ap.getListaPelicula().lastIndexOf(t);
                    }

                }
                boolean ver = false;
                while (!ver) {
                    ver = true;
                }
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(newdat.getText())) {
                        ver = false;
                    }

                }
                if (ver) {
                    pelis.setId(newdat.getText());
                    ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(pos), pelis);

                } else {
                    newdat.setText(JOptionPane.showInputDialog(modpeli, "ID YA EXISTE INGRESE OTRO"));
                    pelis.setId(newdat.getText());
                    ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(pos), pelis);
                }
                break;
            case 1:
                pelis.setNombre(newdat.getText());
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }
                break;
            case 2:
                pelis.setCategoria(newdat.getText());
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }
                break;
            case 3:
                ArrayList<idioma> idiomas = new ArrayList();
                Scanner s = new Scanner(newdat.getText());
                s.useDelimiter(",");
                while (s.hasNext()) {
                    idiomas.add(new idioma(s.next()));
                }
                pelis.setIdiomas(idiomas);
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }
                break;
            case 4:
                ArrayList<sub> sub = new ArrayList();
                Scanner s2 = new Scanner(newdat.getText());
                s2.useDelimiter(",");
                while (s2.hasNext()) {
                    sub.add(new sub(s2.next()));
                }
                pelis.setSubtitulos(sub);
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }

                break;
            case 5:
                ArrayList<comments> com = new ArrayList();
                Scanner s3 = new Scanner(newdat.getText());
                s3.useDelimiter(",");
                while (s3.hasNext()) {
                    com.add(new comments(s3.next()));
                }
                pelis.setComentarios(com);
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }

                break;
            case 6:
                ArrayList<actores> actor = new ArrayList();
                Scanner s4 = new Scanner(newdat.getText());
                s4.useDelimiter(",");
                while (s4.hasNext()) {
                    actor.add(new actores(s4.next()));
                }
                pelis.setActores(actor);
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }

                break;
            case 7:
                pelis.setProductora(newdat.getText());
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }
                break;
            case 8:
                pelis.setDirector(newdat.getText());
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }
                break;
            case 9:
                pelis.setDuracion(newdat.getText());
                for (pelicula t : ap.getListaPelicula()) {
                    if (t.getId().equals(pelis.getId())) {
                        ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                    }
                }
                break;
            case 10:
                int rate = Integer.parseInt(newdat.getText());
                if (rate > 5 || rate < 1) {
                    JOptionPane.showMessageDialog(modpeli, "ERROR RATING NO VALIDO");
                } else {
                    pelis.setRating(rate);
                    for (pelicula t : ap.getListaPelicula()) {
                        if (t.getId().equals(pelis.getId())) {
                            ap.getListaPelicula().set(ap.getListaPelicula().lastIndexOf(t), pelis);
                        }
                    }
                }
                break;
        }
        try {
            ap.escribirArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultListModel m = (DefaultListModel) peliculas1.getModel();

        for (int i = 0; i < ap.listaPelicula.size() - 1; i++) {
            m.addElement(new pelicula(ap.listaPelicula.get(i).getId(), ap.listaPelicula.get(i).getNombre(), ap.listaPelicula.get(i).getCategoria(),
                    ap.listaPelicula.get(i).getIdiomas(), ap.listaPelicula.get(i).getSubtitulos(), ap.listaPelicula.get(i).getComentarios(), ap.listaPelicula.get(i).getActores(), ap.listaPelicula.get(i).getProductora(),
                    ap.listaPelicula.get(i).getDirector(), ap.listaPelicula.get(i).getDuracion(), ap.listaPelicula.get(i).getRating()));
        }
        peliculas1.setModel(m);
        JOptionPane.showMessageDialog(app, "DATO EDITADO EXITOSAMENTE!");
        modpeli.setVisible(false);
    }//GEN-LAST:event_jButton10MouseClicked

    private void jButton7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton7MouseClicked
        // TODO add your handling code here:
        administrarseries ap = new administrarseries("./series.txt");
        try {
            ap.cargarArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        switch (editdatos.getSelectedIndex()) {
            case 0:
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        int pos = ap.getListaSerie().lastIndexOf(t);
                    }

                }
                boolean ver = false;
                while (!ver) {
                    ver = true;
                }
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(newdat1.getText())) {
                        ver = false;
                    }

                }
                if (ver) {
                    series.setId(newdat1.getText());
                    ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(pos), series);

                } else {
                    newdat1.setText(JOptionPane.showInputDialog(modpeli, "ID YA EXISTE INGRESE OTRO"));
                    series.setId(newdat1.getText());
                    ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(pos), series);
                }
                break;
            case 1:
                series.setNombre(newdat1.getText());
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
                break;
            case 2:
                series.setCategoria(newdat1.getText());
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
                break;
            case 3:
                ArrayList<idioma> idiomas = new ArrayList();
                Scanner s = new Scanner(newdat1.getText());
                s.useDelimiter(",");
                while (s.hasNext()) {
                    idiomas.add(new idioma(s.next()));
                }
                series.setIdiomas(idiomas);
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
                break;
            case 4:
                ArrayList<sub> sub = new ArrayList();
                Scanner s2 = new Scanner(newdat1.getText());
                s2.useDelimiter(",");
                while (s2.hasNext()) {
                    sub.add(new sub(s2.next()));
                }
                series.setSubtitulos(sub);
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }

                break;
            case 5:
                ArrayList<comments> com = new ArrayList();
                Scanner s3 = new Scanner(newdat1.getText());
                s3.useDelimiter(",");
                while (s3.hasNext()) {
                    com.add(new comments(s3.next()));
                }
                series.setComentarios(com);
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }

                break;
            case 6:
                ArrayList<actores> actor = new ArrayList();
                Scanner s4 = new Scanner(newdat1.getText());
                s4.useDelimiter(",");
                while (s4.hasNext()) {
                    actor.add(new actores(s4.next()));
                }
                series.setActores(actor);
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }

                break;
            case 7:
                series.setProductora(newdat1.getText());
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
                break;
            case 8:
                series.setDirector(newdat1.getText());
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
                break;
            case 9:
                series.setDuracion(newdat1.getText());
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
                break;
            case 10:
                int rate = Integer.parseInt(newdat1.getText());
                if (rate > 5 || rate < 1) {
                    JOptionPane.showMessageDialog(modserie, "ERROR RATING NO VALIDO");
                } else {
                    series.setRating(rate);
                    for (serie t : ap.getListaSerie()) {
                        if (t.getId().equals(pelis.getId())) {
                            ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                        }
                    }
                }
                break;
            case 11:
                series.setTemp((Integer.parseInt(newdat1.getText())));
                for (serie t : ap.getListaSerie()) {
                    if (t.getId().equals(series.getId())) {
                        ap.getListaSerie().set(ap.getListaSerie().lastIndexOf(t), series);
                    }
                }
        }
        try {
            ap.escribirArchivo();
        } catch (IOException ex) {
            Logger.getLogger(principal.class.getName()).log(Level.SEVERE, null, ex);
        }
        DefaultListModel m = (DefaultListModel) series1.getModel();

        for (int i = 0; i < ap.listaSerie.size() - 1; i++) {
            m.addElement(new serie(ap.listaSerie.get(i).getId(), ap.listaSerie.get(i).getNombre(), ap.listaSerie.get(i).getCategoria(),
                    ap.listaSerie.get(i).getIdiomas(), ap.listaSerie.get(i).getSubtitulos(), ap.listaSerie.get(i).getComentarios(), ap.listaSerie.get(i).getActores(), ap.listaSerie.get(i).getProductora(),
                    ap.listaSerie.get(i).getDirector(), ap.listaSerie.get(i).getDuracion(), ap.listaSerie.get(i).getRating(), ap.listaSerie.get(i).getTemp()));
        }
        series1.setModel(m);
        JOptionPane.showMessageDialog(app, "DATO EDITADO EXITOSAMENTE!");
        modserie.setVisible(false);
    }//GEN-LAST:event_jButton7MouseClicked

    private void prefmMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prefmMouseClicked
        // TODO add your handling code here:
        if (peliculas1.getSelectedIndex() >= 0) {
            DefaultTreeModel modeloARBOL = (DefaultTreeModel) tree1.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modeloARBOL.getRoot();
            //obtener persona guardada
            DefaultListModel modeloLISTA = (DefaultListModel) peliculas1.getModel();
            String categoria, nombre, peli = "Peliculas";
            
            categoria = ((pelicula) modeloLISTA.get(peliculas1.getSelectedIndex())).getCategoria();
            nombre = ((pelicula) modeloLISTA.get(peliculas1.getSelectedIndex())).getNombre();
            

            int centinela = -1;
            boolean rep = false;
            for (int i = 0; i < raiz.getChildAt(0).getChildCount(); i++) {
                if (raiz.getChildAt(0).getChildAt(i).toString().equals(categoria)) {

                    for (int j = 0; j < raiz.getChildAt(0).getChildAt(i).getChildCount(); j++) {
                        if (raiz.getChildAt(0).getChildAt(i).getChildAt(j).toString().equals(nombre)) {
                            rep = true;
                        }
                    }
                    if (!rep) {
                        DefaultMutableTreeNode p = new DefaultMutableTreeNode(new pelicula(nombre, categoria));
                        ((DefaultMutableTreeNode) raiz.getChildAt(0).getChildAt(i)).add(p);
                    } else {
                        JOptionPane.showMessageDialog(this, "PELICULA YA ESTA EN ARBOL");
                    }

                    centinela = 1;
                }
            }
            if (centinela == -1) {
                DefaultMutableTreeNode n = new DefaultMutableTreeNode(categoria);
                DefaultMutableTreeNode p = new DefaultMutableTreeNode(new pelicula(nombre, categoria));
                n.add(p);
                ((DefaultMutableTreeNode) raiz.getChildAt(0)).add(n);
            }
            modeloARBOL.reload();
        } else {
            JOptionPane.showMessageDialog(this, "No hay señores seleccionados");
        }
    }//GEN-LAST:event_prefmMouseClicked

    private void prefsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prefsMouseClicked
        // TODO add your handling code here:
        if (series1.getSelectedIndex() >= 0) {
            DefaultTreeModel modeloARBOL = (DefaultTreeModel) tree1.getModel();
            DefaultMutableTreeNode raiz = (DefaultMutableTreeNode) modeloARBOL.getRoot();
            //obtener persona guardada
            DefaultListModel modeloLISTA = (DefaultListModel) series1.getModel();
            String categoria, nombre, peli = "Series";
            
            categoria = ((serie) modeloLISTA.get(series1.getSelectedIndex())).getCategoria();
            nombre = ((serie) modeloLISTA.get(series1.getSelectedIndex())).getNombre();
            

            int centinela = -1;
            boolean rep = false;
            for (int i = 0; i < raiz.getChildAt(1).getChildCount(); i++) {
                if (raiz.getChildAt(0).getChildAt(i).toString().equals(categoria)) {

                    for (int j = 0; j < raiz.getChildAt(1).getChildAt(i).getChildCount(); j++) {
                        if (raiz.getChildAt(1).getChildAt(i).getChildAt(j).toString().equals(nombre)) {
                            rep = true;
                        }
                    }
                    if (!rep) {
                        DefaultMutableTreeNode p = new DefaultMutableTreeNode(new serie(nombre, categoria));
                        ((DefaultMutableTreeNode) raiz.getChildAt(1).getChildAt(i)).add(p);
                    } else {
                        JOptionPane.showMessageDialog(app, "SERIE YA ESTA EN ARBOL");
                    }

                    centinela = 1;
                }
            }
            if (centinela == -1) {
                DefaultMutableTreeNode n = new DefaultMutableTreeNode(categoria);
                DefaultMutableTreeNode p = new DefaultMutableTreeNode(new serie(nombre, categoria));
                n.add(p);
                ((DefaultMutableTreeNode) raiz.getChildAt(1)).add(n);
            }
            modeloARBOL.reload();
        } else {
            JOptionPane.showMessageDialog(app, "No hay señores seleccionados");
        }
    }//GEN-LAST:event_prefsMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField a_id;
    private javax.swing.JTextField aact;
    private javax.swing.JTextField acom;
    private javax.swing.JTextField act;
    private javax.swing.JTextField adir;
    private javax.swing.JTextField adur;
    private javax.swing.JTextField aid;
    private javax.swing.JTextField anm;
    private javax.swing.JDialog app;
    private javax.swing.JTextField aprod;
    private javax.swing.JComboBox<String> arat;
    private javax.swing.JTextField asub;
    private javax.swing.JButton bt_admin;
    private javax.swing.JButton bt_cuenta;
    private javax.swing.JTextField correo;
    private javax.swing.JComboBox<String> editdato;
    private javax.swing.JComboBox<String> editdatos;
    private javax.swing.JTextField fecha;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JDialog jd_admin;
    private javax.swing.JDialog modpeli;
    private javax.swing.JDialog modserie;
    private javax.swing.JTextField newdat;
    private javax.swing.JTextField newdat1;
    private javax.swing.JTextField ntemp;
    private javax.swing.JPasswordField pass2;
    private javax.swing.JList<String> peliculas1;
    private javax.swing.JPasswordField pf_pass;
    private javax.swing.JComboBox<String> pos;
    private javax.swing.JButton prefm;
    private javax.swing.JButton prefs;
    private javax.swing.JDialog register;
    private javax.swing.JList<String> series1;
    private javax.swing.JTextField tarjeta;
    private javax.swing.JTextField tf_user;
    private javax.swing.JTree tree1;
    private javax.swing.JTextField user;
    // End of variables declaration//GEN-END:variables
   serie series = new serie();
    pelicula pelis = new pelicula();
}
